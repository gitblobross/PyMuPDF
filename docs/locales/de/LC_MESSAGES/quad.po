# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2025, Artifex
# This file is distributed under the same license as the PyMuPDF package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMuPDF 1.25.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 15:00+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: de\n"
"Language-Team: de <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../header.rst:-1 3ad4b4dd8a9d444dbdb71d2f893d147d
msgid "Artifex"
msgstr ""

#: ../../header.rst:-1 8e281561019a467090b604cbf8c25baa
msgid ""
"PyMuPDF is a high-performance Python library for data extraction, "
"analysis, conversion & manipulation of PDF (and other) documents."
msgstr ""

#: ../../header.rst:-1 7a22fe4efbda4a6e9221d09c9a1e31f5
msgid ""
"PDF Text Extraction, PDF Image Extraction, PDF Conversion, PDF Tables, "
"PDF Splitting, PDF Creation, Pyodide, PyScript"
msgstr ""

#: ../../quad.rst:7 35e2527763ab458fa5ba06887a186967
msgid "Quad"
msgstr ""

#: ../../quad.rst:9 7800e12444f748a6831e1efc77128fa3
msgid ""
"Represents a four-sided mathematical shape (also called \"quadrilateral\""
" or \"tetragon\") in the plane, defined as a sequence of four "
":ref:`Point` objects ul, ur, ll, lr (conveniently called upper left, "
"upper right, lower left, lower right)."
msgstr ""

#: ../../quad.rst:11 4d17c9c46c584b239de386721cba1810
msgid ""
"Quads can **be obtained** as results of text search methods "
"(:meth:`Page.search_for`), and they **are used** to define text marker "
"annotations (see e.g. :meth:`Page.add_squiggly_annot` and friends), and "
"in several draw methods (like :meth:`Page.draw_quad` / "
":meth:`Shape.draw_quad`, :meth:`Page.draw_oval`/ "
":meth:`Shape.draw_quad`)."
msgstr ""

#: ../../quad.rst:15 7b24b5db8f874de9a5211dce20991a59
msgid ""
"If the corners of a rectangle are transformed with a **rotation**, "
"**scale** or **translation** :ref:`Matrix`, then the resulting quad is "
"**rectangular** (= congruent to a rectangle), i.e. all of its corners "
"again enclose angles of 90 degrees. Property :attr:`Quad.is_rectangular` "
"checks whether a quad can be thought of being the result of such an "
"operation."
msgstr ""

#: ../../quad.rst:17 688788bd21fd45f692790d0473acb161
msgid ""
"This is not true for all matrices: e.g. shear matrices produce "
"parallelograms, and non-invertible matrices deliver \"degenerate\" "
"tetragons like triangles or lines."
msgstr ""

#: ../../quad.rst:19 cf1183ff01fc48bf97106c5a287a5ff7
msgid ""
"Attribute :attr:`Quad.rect` obtains the enveloping rectangle. Vice versa,"
" rectangles now have attributes :attr:`Rect.quad`, resp. "
":attr:`IRect.quad` to obtain their respective tetragon versions."
msgstr ""

#: ../../quad.rst:23 50d7d842d9734fa599c188cc646d7b45
msgid "**Methods / Attributes**"
msgstr ""

#: ../../quad.rst:23 19f74f68bb13495c8ebf6c8b0b42f965
msgid "**Short Description**"
msgstr ""

#: ../../quad.rst:25 e538183055244dc08b0b15c4b8912add
msgid ":meth:`Quad.transform`"
msgstr ""

#: ../../quad.rst:25 9f2dd03a77524dfd9b216fbb23b9cda3
msgid "transform with a matrix"
msgstr ""

#: ../../quad.rst:26 6235ae5796024a74a6be5aa7991d9d4e
msgid ":meth:`Quad.morph`"
msgstr ""

#: ../../quad.rst:26 ee610799d4d446bc8e8b0e6c5bbbb1d6
msgid "transform with a point and matrix"
msgstr ""

#: ../../quad.rst:27 046b52453a10469e8acd23a2744d436c
msgid ":attr:`Quad.ul`"
msgstr ""

#: ../../quad.rst:27 6a03caf34312460985dc2fa98abdf184
msgid "upper left point"
msgstr ""

#: ../../quad.rst:28 4ccf2ab7cc924c399255bcdbd26f5233
msgid ":attr:`Quad.ur`"
msgstr ""

#: ../../quad.rst:28 be0476ca60a84fc08b7232ed236c4a76
msgid "upper right point"
msgstr ""

#: ../../quad.rst:29 a9835aa97d1b4882af33c92e9119563a
msgid ":attr:`Quad.ll`"
msgstr ""

#: ../../quad.rst:29 b7fffd7413fc4d0cafb1f629cf052760
msgid "lower left point"
msgstr ""

#: ../../quad.rst:30 c28f7725993c42398e1efe0361e4cd0c
msgid ":attr:`Quad.lr`"
msgstr ""

#: ../../quad.rst:30 928da6d5fb114af49b9f822994eeca25
msgid "lower right point"
msgstr ""

#: ../../quad.rst:31 b6205ef513fc4875b98f196a42177c78
msgid ":attr:`Quad.is_convex`"
msgstr ""

#: ../../quad.rst:31 5b826a02006c4d41b209de06b14a5189
msgid "true if quad is a convex set"
msgstr ""

#: ../../quad.rst:32 51d60aeda5e54bcbaf2e39b528354d95
msgid ":attr:`Quad.is_empty`"
msgstr ""

#: ../../quad.rst:32 352c6bcfc0894aaeb7400e72b81e1e94
msgid "true if quad is an empty set"
msgstr ""

#: ../../quad.rst:33 36eca873465943169ce2e899cbb1a5e6
msgid ":attr:`Quad.is_rectangular`"
msgstr ""

#: ../../quad.rst:33 bc110a7f43304b5f9cf4b9e5f348d237
msgid "true if quad is congruent to a rectangle"
msgstr ""

#: ../../quad.rst:34 42b941820433460aa6e4f0939cbd93a7
msgid ":attr:`Quad.rect`"
msgstr ""

#: ../../quad.rst:34 6870fe5a0464469ab8425e8f89f7a530
msgid "smallest containing :ref:`Rect`"
msgstr ""

#: ../../quad.rst:35 79aa77876e4d45a289d673fe00a95995
msgid ":attr:`Quad.width`"
msgstr ""

#: ../../quad.rst:35 1082a3b6b72b40888b3797974c6f1191
msgid "the longest width value"
msgstr ""

#: ../../quad.rst:36 7a4558a4427841528a563259add0a04b
msgid ":attr:`Quad.height`"
msgstr ""

#: ../../quad.rst:36 a3081f95dafb42188a9b34f2e0664367
msgid "the longest height value"
msgstr ""

#: ../../quad.rst:39 b2cf4d9a187b48ff8960c68e29a2f5ce
msgid "**Class API**"
msgstr ""

#: ../../quad.rst:51 5500a6189d9147a996038ae4dccde288
msgid ""
"Overloaded constructors: \"ul\", \"ur\", \"ll\", \"lr\" stand for "
":data:`point_like` objects (the four corners), \"sequence\" is a Python "
"sequence with four :data:`point_like` objects."
msgstr ""

#: ../../quad.rst:53 93948e27f11149d3b2de812391df3cbe
msgid "If \"quad\" is specified, the constructor creates a **new copy** of it."
msgstr ""

#: ../../quad.rst:55 f2671c8b3169475cb8037f714c6b1f02
msgid ""
"Without parameters, a quad consisting of 4 copies of *Point(0, 0)* is "
"created."
msgstr ""

#: ../../quad.rst:60 111c1f817d0f46f4a18dcfd6c663c18a
msgid ""
"Modify the quadrilateral by transforming each of its corners with a "
"matrix."
msgstr ""

#: ../../quad.rst 8266d43d9f56420bb2aa23d082c0b121
#: 8b1eac95560f446b8e20b55dd12a6816
msgid "Parameters"
msgstr ""

#: ../../quad.rst:62 ../../quad.rst:69 0d634d4d35d54c30baabad227f22028f
#: 9a047b3f95b14bb7b64ad40042d33edf
msgid "the matrix."
msgstr ""

#: ../../quad.rst:66 3267067416df4dd8b8c8377a0d0e60c2
msgid ""
"*(New in version 1.17.0)* \"Morph\" the quad with a matrix-like using a "
"point-like as fixed point."
msgstr ""

#: ../../quad.rst:68 d59f47deb52f43bbaac3720001127772
msgid "the point."
msgstr ""

#: ../../quad.rst aa094e5057b24cf88c8f90ad40d9a6cb
msgid "Returns"
msgstr ""

#: ../../quad.rst:70 c0beb373c7644f0aa60225c4310d6f7e
msgid "a new quad (no operation if this is the infinite quad)."
msgstr ""

#: ../../quad.rst:75 dddc8689476548da8e50846d44537f2d
msgid ""
"The smallest rectangle containing the quad, represented by the blue area "
"in the following picture."
msgstr ""

#: ../../quad.rst 0d91757c4c9c4ded9d29ce0f2a2c7b6e
#: 25ea7b95ca1c470bbd0c8c43d4724eb8 3608dfc13924419a90f0f72f4942d4bb
#: 46bbb10a82e94600b8fc797424ddd669 47c64c1542614109b19d7cfe7ff52b48
#: 8c84322b6cca4f0aaeb2da2b9c139ad2 9c0e2fe975e94117ad5671c3ae223f92
#: d3ab357c8c344e4fbbffbbf6e592d8f7 d6db0b6368ce47b28d082a226b28263e
#: ea8761efdea544869198ae33343519b9
msgid "type"
msgstr ""

#: ../../quad.rst:79 a447749ed60c435c945ea6d5ac0e1531
msgid ":ref:`Rect`"
msgstr ""

#: ../../quad.rst:83 44f1f1d4404e42f0a16619c78d94e880
msgid "Upper left point."
msgstr ""

#: ../../quad.rst:85 ../../quad.rst:91 ../../quad.rst:97 ../../quad.rst:103
#: 03736f05a8f5421189f98f0b2563c031 a6060101e92f44bf89658804e52b0c6c
#: cd76cb6712a84b878c58e674036c6b57 e745c97cd50f406d99f625378bc07267
msgid ":ref:`Point`"
msgstr ""

#: ../../quad.rst:89 a15d9aa488ac46398e1300d7a621789d
msgid "Upper right point."
msgstr ""

#: ../../quad.rst:95 e58949b5a6124ea7b84c82246b331fa5
msgid "Lower left point."
msgstr ""

#: ../../quad.rst:101 459751b609574eee8992e1f4ed63a8be
msgid "Lower right point."
msgstr ""

#: ../../quad.rst:107 42081dff926d4b2dbfc85eebd7c6b91c
msgid "New in version 1.16.1"
msgstr ""

#: ../../quad.rst:109 18727351228e45f18f66be1e6b1a0431
msgid ""
"Checks if for any two points of the quad, all points on their connecting "
"line also belong to the quad."
msgstr ""

#: ../../quad.rst:114 ../../quad.rst:120 ../../quad.rst:126
#: 269c1e4494824e2cb5936c9aeaae79e7 c41948d6f881462aac8ced961485b1ec
#: dea8b14143c94257a8c383e3f0c1f9a2
msgid "bool"
msgstr ""

#: ../../quad.rst:118 fb252aa17185476b93956d6738fff2e7
msgid ""
"True if enclosed area is zero, which means that at least three of the "
"four corners are on the same line. If this is false, the quad may still "
"be degenerate or not look like a tetragon at all (triangles, "
"parallelograms, trapezoids, ...)."
msgstr ""

#: ../../quad.rst:124 df1dab125bdf4e06b610448db4325b06
msgid ""
"True if all corner angles are 90 degrees. This implies that the quad is "
"**convex and not empty**."
msgstr ""

#: ../../quad.rst:130 4f39bb3710a4402da4e1c2a2d8e7f5f4
msgid "The maximum length of the top and the bottom side."
msgstr ""

#: ../../quad.rst:132 ../../quad.rst:138 dbf8525cf293442a8ac2170ef5d5830b
#: dc2fb941fd18465297cb72af2629fce0
msgid "float"
msgstr ""

#: ../../quad.rst:136 637d9c47fc5448c6b6b12ed59410f8cf
msgid "The maximum length of the left and the right side."
msgstr ""

#: ../../quad.rst:141 deee9fb98ab34d4494ac466fabaea29d
msgid "Remark"
msgstr ""

#: ../../quad.rst:142 1b61ac0c866a4df28afb4a722645cf08
msgid ""
"This class adheres to the sequence protocol, so components can be dealt "
"with via their indices, too. Also refer to :ref:`SequenceTypes`."
msgstr ""

#: ../../quad.rst:145 6215145a706f4cd4a73d3ab4595807a9
msgid "Algebra and Containment Checks"
msgstr ""

#: ../../quad.rst:146 fb0679a33ccb4fdb98427f9407938675
msgid ""
"Starting with v1.19.6, quads can be used in algebraic expressions like "
"the other geometry object -- the respective restrictions have been "
"lifted. In particular, all the following combinations of containment "
"checking are now possible:"
msgstr ""

#: ../../quad.rst:148 0e4401adcb5f4fc485e655c876a8ae28
msgid "`{Point | IRect | Rect | Quad} in {IRect | Rect | Quad}`"
msgstr ""

#: ../../quad.rst:150 7f8244052cb6402a939f0594f0b6a759
msgid "Please note the following interesting detail:"
msgstr ""

#: ../../quad.rst:152 9671396ad46747c2ae802633663007ee
msgid ""
"For a rectangle, only its top-left point belongs to it. Since v1.19.0, "
"rectangles are defined to be \"open\", such that its bottom and its right"
" edge do not belong to it -- including the respective corners. But for "
"quads there exists no such notion like \"openness\", so we have the "
"following somewhat surprising implication:"
msgstr ""

#: ../../footer.rst:60 cc3f6c4d45844fe8ad36b35c6e3bd3ab
msgid "This documentation covers all versions up to |version|."
msgstr ""

